[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "fortimanager_template_sync"
authors = [ {name = "Viktor Kertesz", email = "vkertesz2@gmail.com"},
]

readme = "README.md"
requires-python = ">=3.9,<4"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ['version', 'description']

dependencies = [
    "GitPython",
    "pydantic>2,<3",
    "typer",
    "pydantic-settings",
    "more-itertools",
    "pyfortinet",
    "jinja2",
    "ruamel.yaml",
]

[project.optional-dependencies]
dev = [
#    "black",
    "pytest-cov",
    "pytest",
    "pytest-dependency",
    "flit",
    "invoke",
    "ruff",
    "pre-commit",
    "mypy",
]

rich = [
    "rich"
]

[tool.flit.module]
name = "fortimanager_template_sync"

[project.scripts]
fmgsync = "fortimanager_template_sync.__main__:app"

[project.urls]
Source = "https://github.com/viktorkertesz/fortimanager-template-sync"
#Documentation = "https://"

[tool.pytest.ini_options]
minversion = "6.0"
#addopts = "-ra -q --cov=fortimanager_template_sync --cov-report=term-missing"

testpaths = [
    "tests"
]

[tool.mypy]
show_error_codes = true
plugins = [
    "pydantic.mypy"
]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | private
    | docs
    | db
    | misc
    | private
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.ruff]
# docs: https://docs.astral.sh/ruff
line-length = 120
target-version = "py39"
extend-exclude = ["private", ".idea", "example", "docs"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pylint
    "PL",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pymarkdown]
plugins.md013.line_length = 120
